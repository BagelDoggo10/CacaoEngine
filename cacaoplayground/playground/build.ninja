# Create definitions
includes = -I../../cacao/include -I../../libs/spdlog/include -I../../libs/bsthreadpool -I../../libs/dynalo/include -I../../libs/uuid_v4 -I../../libs/glm -I../../libs -I../../libs/spirv-cross -I../../libs/generated
libs = -L.. -lcacao
opts = -std=c++20 -fPIC -g -msse4.1

cflags = $includes $opts -c
lflags = $includes $opts $libs -shared -fuse-ld=lld

objdir = ./build/obj
spvdir = ./assets/shaders

# Set Ninja build directory
builddir = ./build

# Create rules
rule compile
    command = clang++ -c $in $cflags -o $out
    description = Compile C++: $in -> $out

rule link
    command = clang++ $in $lflags -o $out
    description = Link Shared Library: $out

rule spv
    command = glslc $in -o $out
    description = Compile Shader: $in -> $out

# Compile objects
build $objdir/Playground.o: compile src/Playground.cpp

# Link library
build ./build/launch.so: link $objdir/Playground.o || $objdir/Playground.o

# Compile shaders
build $spvdir/color.vert.spv: spv src/shaders/color.vert
build $spvdir/color.frag.spv: spv src/shaders/color.frag
